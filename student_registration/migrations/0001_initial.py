# Generated by Django 4.1.7 on 2023-04-08 08:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("user_name", models.CharField(max_length=100, unique=True)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("middle_name", models.CharField(max_length=100)),
                ("contact_no", models.IntegerField()),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=False)),
                ("is_student", models.BooleanField(default=False)),
                ("is_driver", models.BooleanField(default=False)),
                ("logged", models.IntegerField(default=0)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Admin"),
                            ("STUDENT", "Student"),
                            ("DRIVER", "Driver"),
                        ],
                        default="ADMIN",
                        max_length=50,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Driverprofile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("franchise", models.CharField(blank=True, max_length=100, null=True)),
                ("birth_date", models.DateField(blank=True, null=True)),
                ("lot", models.CharField(blank=True, max_length=100, null=True)),
                ("street", models.CharField(blank=True, max_length=100, null=True)),
                ("village", models.CharField(blank=True, max_length=100, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("zipcode", models.IntegerField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="images/"),
                ),
                ("age", models.IntegerField(null=True)),
                (
                    "school_branch",
                    models.CharField(
                        choices=[("afpovai", "AFPOVAI"), ("bayani rd", "Bayani Rd")],
                        default="bayani rd",
                        max_length=100,
                    ),
                ),
                (
                    "assigned_route",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "liscense_no",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("operator", models.CharField(blank=True, max_length=100, null=True)),
                ("franchise_no", models.IntegerField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "vehicle_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("model", models.CharField(max_length=100)),
                ("plate_no", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "reservation_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "pending"),
                            ("APPROVED", "approved"),
                            ("DECLINED", "declined"),
                        ],
                        default="PENDING",
                        max_length=100,
                    ),
                ),
                (
                    "driver",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student_registration.driverprofile",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("parent", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "parent_contactNo",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "parent_address",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("birth_date", models.DateField(blank=True, null=True)),
                ("lot", models.CharField(blank=True, max_length=100, null=True)),
                ("street", models.CharField(blank=True, max_length=100, null=True)),
                ("village", models.CharField(blank=True, max_length=100, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("zipcode", models.IntegerField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="images/"),
                ),
                ("age", models.IntegerField(null=True)),
                (
                    "school_branch",
                    models.CharField(
                        choices=[("afpovai", "AFPOVAI"), ("bayani rd", "Bayani Rd")],
                        default="bayani rd",
                        max_length=100,
                    ),
                ),
                ("section", models.CharField(blank=True, max_length=100, null=True)),
                ("year_level", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="driverprofile",
            name="vehicle",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="student_registration.vehicle",
            ),
        ),
        migrations.CreateModel(
            name="DriverUser",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("student_registration.user",),
        ),
        migrations.CreateModel(
            name="StudentUser",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("student_registration.user",),
        ),
    ]
